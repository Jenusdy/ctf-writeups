def lcg(eax):
    return (eax * 0x14a + 0x64) % 0x8ff

data_4140_plus = [
    0xdd, 0x9a, 0xde, 0x4e, 0x69, 0xe1, 0xe9, 0x2c, 0xd2, 0x4e, 0xec, 0xe7, 0x18, 0x26, 0x6a, 0x56,
    0x79, 0xd8, 0xa3, 0x55, 0x72, 0xbc, 0x76, 0xc4, 0x0c, 0x0f, 0x9b, 0xbe, 0xc6, 0x81, 0xe2, 0x41,
    0x47, 0xa0, 0xf4, 0x26
]
password = []
eax = 1 #i got this dynamically 0x1

for i in range(36):
    eax = lcg(eax)
    if i < len(data_4140_plus):
        p = data_4140_plus[i] ^ (eax & 0xff)
    else:
        p = 0 ^ (eax & 0xff)  # Padding with 0s
    password.append(p)

print(''.join(chr(c) for c in password if 32 <= c <= 126))